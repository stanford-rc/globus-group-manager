# vim: ts=4 sw=4 et
# -*- coding: utf-8 -*-

# This is a Python project!

# Thanks to PEP 518 and PEP 621, we can have (almost all) of the setup data in
# this file!
# NOTE: This requires that you have an up-to-date `pip`.  It helps that this
# software requires at least Python 3.9…

# That is why you won't find any `setup.py` script here.  Everything that can
# be in this file will be.  Whatever cannot be in this file, will be present in
# another file (like `setup.cfg`).

# Start by describing how the package is built.

# Build using setuptools & wheel.
# NOTE: Setuptools support for pyproject.toml began in version 61.0.0.
[build-system]
requires = [
    "setuptools >= 62.1.0",
    "wheel >= 0.37.1",
]
build-backend = "setuptools.build_meta"

# Next, put in the project metadata!

[project]

# Name and version (which supports using `file:`)
name = "stanford-globus-group-manager"
version = "0.0.1"

# The authors list has its own table, so it has to come later…

# The long_description is now `readme`, and takes a path by default.
# The license can also be specified as a file path.
description = "Stanford Globus Group Manager: Integrate Stanford Workgroups and Globus Groups"
readme = "README.rst"
license = { "file" = "LICENSE" }

# Classifiers is a typical array
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: Sphinx",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "License :: OSI Approved :: GNU Free Documentation License (FDL)",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Topic :: Office/Business",
    "Topic :: Office/Business :: Groupware",
    "Typing :: Typed",
]

# URLs is its own table, so it has to come later…

# Next up are our dependencies, in this order:

# 1: Python
requires-python = "<4.0, >=3.9"

# 2: Required dependencies.
dependencies = [
    "click <9.0, >=8.1.3",
    "coloredlogs <16.0, >=15.0.1",
    "python-dotenv >=0.20.0, <2.0",
    "globus-sdk <4.0, >=3.7.0",
    "stanford-mais <1.0, >=0.50.1",
]

# 3: Optional dependencies.
[project.optional-dependencies]

# The `build` option adds the tooling for building distributions.
build = [
    "build",
]

# The `docs` option adds support for building docs.
docs = [
    "sphinx <5.0, >=4.5.0",
    "sphinx-rtd-theme",
]

# The `gcs` option adds support for Google Cloud Secret Manager for storing
# configuration data.
gcs = [
    "google-cloud-secret-manager <3.0, >=2.7.0"
]

# The `ws` adds the requirements for hosting the GGM web site & API.
ws = [
    "flask <3.0, >=2.1.2",
    "gunicorn <21, >=20.1.0",
]

# Before we move on, finish up the project metadata tables…

# Each author gets its own [[project.authors]] block
[[project.authors]]
"name" = "A. Karl Kornel"
"email" = "akkornel@stanford.edu"

# URLs is a table, just like before.
[project.urls]
    "Homepage" = "https://github.com/stanford-rc/globus-group-manager"
    "Bug Tracker" = "https://github.com/stanford-rc/globus-group-manager/issues"
    "Source Code" = "https://github.com/stanford-rc/globus-group-manager/tree/main1"
    "Documentation" = "https://stanford-rc.github.io/globus-group-manager/"

# Define the packages we install, and where to find them.

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["ggm", "webapp"]

# There are data files which need to be included in the package.
# But NOTE: include-package-data is now True by default!
# So, as long as it's specified in MANIFEST.in, it should be included.

# Define our CLI commands

[project.scripts]
stanford-globus-group-manager = "ggm.cli:main"
