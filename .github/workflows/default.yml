name: Docs

on:
  push:
    branches:
      - main1

jobs:
  # This job will eventually build the docs and deploy to GitHub Pages.
  # But for now, let's just get the build part working!
  docs:
    # A tip from https://github.com/marketplace/actions/deploy-to-github-pages
    # Make sure multiple docs builds aren't happening at the same time.
    concurrency: docs-${{ github.ref }}

    # Run this on Ubuntu
    runs-on: ubuntu-latest

    steps:
      # As always, start with a checkout.
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: "code"

      # Bring in Python 3.9
      - name: Install Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      # Install the package
      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      - name: Build and install package
        working-directory: "code"
        run: |
          python -m pip install .

      # Build the docs with Sphinx.
      - name: Install Sphinx
        working-directory: "code"
        run: |
          python -m pip install .[docs]
      - name: Build docs
        run: |
          mkdir build
          sphinx-build -b html code/docs build

      # Check out gh-pages, update, and push
      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: "gh-pages"
          fetch-depth: 0
          path: "gh-pages"

      # The last action has a way to do a `git rm`, but I want that to happen
      # before new content is copied in.  So, do the removal first.
      # We remove everything.  Unchanged files will be copied back in, and Git
      # is smart enough to recognize a remove-then-add no-op.
      - name: Remove existing gh-pages content and re-add .nojekyll
        working-directory: "gh-pages"
        run: |
          git rm -r *
          touch .nojekyll

      - name: Install new content
        run: |
          cp -r build/* gh-pages/.

      # With the content installed, commit and push!
      - name: Commit and push gh-pages
        uses: EndBug/add-and-commit@v9
        with:
          cwd: 'gh-pages'
          add: '.'
          default_author: "github_actions"
          message: "Update GitHub Pages from commit ${{github.sha}}"
          push: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
